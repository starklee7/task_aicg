PRD:AIGC 服装设计业务 Demand-Review 一体化模块 PRD文档

需求目标：在已上线的AICG系统网页中，新增⼀个轻量级的「需求⇄复盘协同板」功能，能让客户、设计师与运营在同⼀界⾯完成（上⼀轮交付复盘要点回顾→新⼀轮需求表单填报→进度&反馈追踪）。

业务流程：
 - 整体闭环流程
  - 1. 上一轮交付完成 → 生成结构化复盘数据
  - 2. 客户点击「一键应用」→ 将复盘要点关联至新需求
  - 3. 客户填写新需求表单 → 系统实时校验字段（目标人群/品类/价位带/灵感词）
  - 4. 需求提交 → 在看板「待确认」列生成卡片
  - 5. 运营审核通过 → 状态变更为「设计中」
  - 6. 设计师上传设计稿 → 状态推进至「预售测试」
  - 7. 客户反馈通过 → 状态变更为「待交付」
  - 8. 设计师确认交付 → 状态标记「已复盘」
  - 9. 生成新复盘卡片 → 开启下一轮循环
 - 核心模块流程
  - 复盘卡片模块
   - 触发时机：用户登录后自动加载
   - 数据展示：
    - 三栏式布局：设计亮点 | 市场数据 | 问题改进
    - 字数>600时折叠显示「展开」按钮（默认4行）
   - 关键交互：
    - 点击「一键应用」→ 在需求表单右侧生成只读标签
    - 标签支持手动删除
  - 需求表单模块
   - 字段结构：
    - 必填字段：目标人群(单选)、品类(文本≤20字)
    - 选填字段：价位带(数值区间)、灵感词(标签组)
    - 系统字段：关联的复盘卡片ID
   - 校验规则：
    - 实时校验：字段非空检查/长度限制/数值逻辑
    - 提交拦截：存在校验错误时禁用提交按钮
  - 协同看板模块
   - 状态列定义（5列固定顺序）：
   - 1.需求待确认 → 2.设计中 → 3.预售测试 → 4.待交付 → 5.已复盘
   - 卡片元素：
    - 缩略图 | 需求ID | 状态标签 | 最后更新时间
   - 交互机制：
    - 拖拽变更状态 → 触发PATCH /orders/{id}/status
    - 状态变更后 → 推送WebSocket消息{userid, orderid, newStatus}
角色权限矩阵
{
  "客户": ["查看关联复盘", "创建/编辑需求", "查看看板", "预售反馈"],
  "设计师": ["查看所有卡片", "状态变更为设计中/待交付", "上传设计稿"],
  "运营": ["全局修改状态", "导出CSV数据", "审核需求"]
}

异常处理逻辑
# 表单校验失败
if field_error:
    return realtime_toast(f"校验失败: {具体错误描述}")

# 看板状态冲突
try:
    update_status(order_id, new_status)
except StatusConflictError:
    show_alert("状态已被他人修改，请刷新后重试")

# 首轮无复盘数据
if not historical_review:
    display_placeholder("暂无历史复盘，完成首单后解锁")

API端点映射
 - PATCH /orders/{id}/status   # 看板拖拽时调用
 - GET   /export?type=csv      # 运营触发数据导出
 - POST /ws/notify             # WebSocket状态通知通道

关键数据模型
 interface DemandBoard {
  status: "pending" | "designing" | "testing" | "delivering" | "reviewed";
  cards: Array<{
    id: string;
    thumbnail?: string;  // 设计稿缩略图URL
    tags: string[];      // 关联的复盘标签
    lastUpdated: Date;
  }>;
 }

 interface ReviewCard {
   highlights: string;    // 设计亮点
   metrics: string;       // 市场数据
   improvements: string;  // 问题改进
 }


页面设计规范文档 - demand-review-board.html
===============================================

整体页面架构
-----------
页面文件: demand-review-board.html
页面标题: 需求⇄复盘协同板 - AICG服装设计系统
页面容器: 最大宽度1440px，居中布局，最小高度100vh
依赖样式: common-styles.css（项目通用样式库）

页面布局结构
-----------
1. 左右结构，左侧导航栏，右侧内容区
   - 导航栏：宽度120px，6个菜单入口（快速生成、实验室、企划版、我的收藏、素材库、协同板）
   - 内容区：页面头部+复盘卡片模块+协同看板区

2. 页面头部 (.page-header)
   - 居中对齐
   - 主标题: "需求⇄复盘协同板" (28px, 字重600, 主文本色)
   - 副标题: "上轮交付复盘要点回顾 → 新轮需求表单填报 → 进度&反馈追踪" (16px, 弱化文本色)

3. 复盘卡片模块 (.main-content)
   - 网格布局: 1列 (grid-template-columns: 1fr 1fr)
   - 列间距: 10px
   - 包含复盘卡片模块和需求表单弹框入口

4. 协同看板区 (.kanban-section)
   - 独立区块，位于复盘卡片模块右侧
   - 5列等宽网格布局

复盘卡片模块 (.review-section)
----------------------------
整体容器:
- 背景色: 白色 (var(--bg-primary))
- 圆角: 8px (var(--radius-xl))
- 边框：1px，边框色

模块头部 (.section-header):
- 内边距: 10px
- 底部边框: 1px 边框色
- 布局: 弹性布局，两端对齐
- 标题: "上轮交付复盘" (18px, 字重600)
- 按钮: "应用至新需求参考" (深蓝色主色#374455，8px×10px内边距)

复盘内容区 (.review-content):
- 三行等宽弹性布局
- 行间隔: 1px 边框色背景

复盘列 (.review-column):
- 背景: 白色
- 内边距: 24px
- 最小高度: 200px

列标题设计:
- 设计亮点: 绿色底边框 (var(--success-green))
- 市场数据: 蓝色底边框 (var(--primary-blue))
- 问题改进: 橙色底边框 (var(--warning-orange))

文本内容:
- 字体大小: 14px
- 行高: 1.6
- 折叠状态: 最多显示4行 (-webkit-line-clamp: 4)
- 展开按钮: 蓝色下划线文本 (12px)

新增需求表单弹框
----------------------------
整体容器:
- 弹框：右侧弹出抽屉式弹框
- 白色背景，12px圆角

表单字段设计:
1. 目标人群 (必填):
   - 单选选择框
   - 实时校验显示

2. 品类字段 (必填):
   - 单选选择框：年龄层、人群等
   - 实时校验显示

3. 价位带 (选填):
   - 双输入框布局 (最低价 ～ 最高价)
   - 数值类型输入
   - 货币类型可选（元、美元、欧元等符号）
   - 区间逻辑校验（最低价<最高价，最高价>最低价）

4. 灵感词 (选填):
   - 标签输入容器设计
   - 标签样式: 深蓝色背景（#374455） (var(--tag-blue-bg))
   - 删除按钮: × 符号
   - 关联复盘标签: 绿色背景 (var(--tag-green-bg))

表单控件规范:
- 输入框: 12px×16px内边距，6px圆角
- 聚焦状态: 蓝色边框 + 3px蓝色外发光
- 错误状态: 红色边框，错误信息12px红色文本
- 标签文本: 14px，字重500

协同看板模块 (.kanban-section)
----------------------------
看板布局:
- 5列等宽网格 (repeat(5, 1fr))
- 列间隔: 1px边框色
- 背景: 边框色

看板列 (.kanban-column):
- 背景: 浅灰色（#F1F5F8）
- 最小高度: 400px
- 列标题区域: 浅灰背景 (var(--bg-tertiary))

列标题设计:
1. 需求待确认 (红色标签)
2. 设计中 (橙色标签)  
3. 预售测试 (蓝色标签)
4. 待交付 (蓝色标签)
5. 已复盘 (绿色标签)

看板卡片 (.kanban-card):
- 白色背景，8px圆角
- 轻微阴影，悬停时增强阴影
- 拖拽时: 80%透明度 + 2度旋转

卡片内容结构:
- 头部: 需求ID + 状态标签
- 主体: 缩略图(40px) + 需求标题 + 详细信息
- 底部: 最后更新时间 (11px, 右对齐)

颜色系统
--------
基于 common-styles.css 的 CSS 变量:

主色调:
- 主蓝色: #3b82f6 (var(--primary-blue))
- 悬停蓝色: #2563eb (var(--primary-blue-hover))

功能色彩:
- 成功绿色: #10b981 (var(--success-green))
- 警告橙色: #f59e0b (var(--warning-orange))
- 错误红色: #ef4444 (var(--error-red))
- 中性灰色: #6b7280 (var(--neutral-gray))

背景层次:
- 主背景: #ffffff (var(--bg-primary))
- 次级背景: #f8fafc (var(--bg-secondary))
- 三级背景: #f1f5f9 (var(--bg-tertiary))

文字颜色:
- 主文本: #111827 (var(--text-primary))
- 次级文本: #374151 (var(--text-secondary))
- 主体文本: #4b5563 (var(--text-body))
- 弱化文本: #9ca3af (var(--text-muted))

交互效果
--------
1. 按钮悬停: 颜色加深 + 向上1px偏移
2. 卡片悬停: 阴影增强 + 向上2px偏移
3. 拖拽效果: 透明度80% + 旋转2度
4. 输入聚焦: 边框高亮 + 外发光效果
5. 状态转换: 0.2s缓动动画
6. 卡片出现: 渐入动画 (fadeIn 0.3s)

响应式断点
----------
1200px以下:
- 主内容区改为单列布局
- 复盘卡片改为单列堆叠
- 看板改为2列布局

768px以下:
- 容器内边距减少为16px
- 看板改为单列布局
- 单选按钮组改为垂直布局
- 价位带输入改为垂直布局

交互状态反馈
-----------
- 成功提示: 绿色Toast通知 (右上角滑入)
- 错误提示: 红色Toast通知
- 拖拽目标: 目标列高亮显示
- 加载状态: 禁用按钮 + 加载动画
- 表单校验: 实时错误提示显示

无障碍设计
----------
- 语义化HTML标签
- 适当的ARIA标签
- 键盘导航支持
- 颜色对比度符合WCAG标准
- 屏幕阅读器兼容

详细页面元素清单
==============

HTML结构树
----------
<div class="page-container">
  <div class="page-header">
    <h1 class="page-title">需求⇄复盘协同板</h1>
    <p class="page-subtitle">上轮交付复盘要点回顾 → 新轮需求表单填报 → 进度&反馈追踪</p>
  </div>

  <div class="main-content">
    <!-- 复盘卡片模块 -->
    <div class="review-section">
      <div class="section-header">
        <h2 class="section-title">上轮交付复盘</h2>
        <button class="apply-btn" id="applyReviewBtn">一键应用</button>
      </div>
      <div class="review-content">
        <div class="review-column highlights">
          <h3 class="review-column-title">设计亮点</h3>
          <div class="review-text collapsed" id="highlightsText">[长文本内容]</div>
          <button class="expand-btn">展开</button>
        </div>
        <div class="review-column metrics">
          <h3 class="review-column-title">市场数据</h3>
          <div class="review-text collapsed" id="metricsText">[长文本内容]</div>
          <button class="expand-btn">展开</button>
        </div>
        <div class="review-column improvements">
          <h3 class="review-column-title">问题改进</h3>
          <div class="review-text collapsed" id="improvementsText">[长文本内容]</div>
          <button class="expand-btn">展开</button>
        </div>
      </div>
    </div>

    <!-- 需求表单模块 -->
    <div class="demand-section">
      <div class="section-header">
        <h2 class="section-title">新需求填报</h2>
      </div>
      <form class="form-content" id="demandForm">
        <div class="form-group">
          <label class="form-label required">目标人群</label>
          <div class="radio-group">
            <div class="radio-item">
              <input type="radio" id="age_20_30" name="target_audience" value="20-30岁女性" required>
              <label for="age_20_30">20-30岁女性</label>
            </div>
            <!-- 更多单选项 -->
          </div>
          <div class="error-message" id="target_audience_error">请选择目标人群</div>
        </div>

        <div class="form-group">
          <label class="form-label required" for="category">品类</label>
          <input type="text" id="category" name="category" class="form-control" 
                 placeholder="请输入品类（如：连衣裙、牛仔裤等）" maxlength="20" required>
          <div class="error-message" id="category_error">品类不能为空，且不超过20个字符</div>
        </div>

        <div class="form-group">
          <label class="form-label">价位带</label>
          <div class="price-range">
            <input type="number" id="price_min" name="price_min" class="form-control" 
                   placeholder="最低价" min="0">
            <span class="price-separator">～</span>
            <input type="number" id="price_max" name="price_max" class="form-control" 
                   placeholder="最高价" min="0">
          </div>
          <div class="error-message" id="price_error">价格区间有误，最高价应大于最低价</div>
        </div>

        <div class="form-group">
          <label class="form-label">灵感词</label>
          <div class="tag-input-container" id="tagContainer">
            <input type="text" class="tag-input" id="tagInput" 
                   placeholder="输入灵感词后按回车添加">
          </div>
          <div class="linked-tags" id="linkedTags" style="display: none;">
            <div class="linked-tags-title">已关联的复盘标签：</div>
            <div class="linked-tags-container" id="linkedTagsContainer"></div>
          </div>
        </div>

        <div class="submit-section">
          <button type="submit" class="btn btn-primary" id="submitBtn">提交需求</button>
        </div>
      </form>
    </div>
  </div>

  <!-- 协同看板区域 -->
  <div class="kanban-section">
    <div class="section-header">
      <h2 class="section-title">需求协同看板</h2>
      <div class="flex gap-md">
        <select id="roleFilter" class="form-control" style="width: auto;">
          <option value="">所有角色</option>
          <option value="客户">客户视角</option>
          <option value="设计师">设计师视角</option>
          <option value="运营">运营视角</option>
        </select>
        <button class="btn btn-secondary" onclick="exportData()">导出数据</button>
      </div>
    </div>
    <div class="kanban-board" id="kanbanBoard">
      <div class="kanban-column" data-status="pending">
        <div class="kanban-column-header">需求待确认 (2)</div>
        <div class="kanban-column-content" id="pending-column">
          <!-- 动态生成的卡片 -->
        </div>
      </div>
      <!-- 重复4个其他状态列 -->
    </div>
  </div>
</div>

CSS类名详细规格
--------------

页面容器类:
.page-container          - 页面主容器 (max-width: 1440px; margin: 0 auto; padding: 24px)
.page-header            - 页面头部区域 (margin-bottom: 32px; text-align: center)
.page-title             - 主标题 (font-size: 28px; font-weight: 600; color: #111827)
.page-subtitle          - 副标题 (color: #9ca3af; font-size: 16px)
.main-content           - 主内容网格容器 (display: grid; grid-template-columns: 1fr 1fr; gap: 32px)

复盘模块类:
.review-section         - 复盘模块容器 (background: #ffffff; border-radius: 12px; box-shadow: 0 2px 8px rgba(0,0,0,0.08))
.section-header         - 模块头部 (padding: 24px; border-bottom: 1px solid #e5e7eb)
.section-title          - 模块标题 (font-size: 18px; font-weight: 600; color: #111827)
.apply-btn              - 一键应用按钮 (padding: 8px 16px; background: #3b82f6; border-radius: 6px)
.review-content         - 复盘内容网格 (display: grid; grid-template-columns: 1fr 1fr 1fr; gap: 1px)
.review-column          - 复盘列 (background: #ffffff; padding: 24px; min-height: 200px)
.review-column-title    - 列标题 (font-size: 14px; font-weight: 600; margin-bottom: 16px)
.review-text            - 复盘文本 (color: #4b5563; line-height: 1.6; font-size: 14px)
.review-text.collapsed  - 折叠状态 (-webkit-line-clamp: 4; overflow: hidden)
.expand-btn             - 展开按钮 (color: #3b82f6; font-size: 12px; text-decoration: underline)

颜色标识类:
.review-column.highlights .review-column-title  - 设计亮点标题 (border-bottom: 2px solid #10b981)
.review-column.metrics .review-column-title     - 市场数据标题 (border-bottom: 2px solid #3b82f6)
.review-column.improvements .review-column-title - 问题改进标题 (border-bottom: 2px solid #f59e0b)

表单模块类:
.demand-section         - 需求表单容器 (样式同.review-section)
.form-content           - 表单内容 (padding: 24px)
.form-group             - 表单字段组 (margin-bottom: 24px)
.form-label             - 字段标签 (font-size: 14px; font-weight: 500; color: #374151)
.form-label.required    - 必填标签 (::after content: " *"; color: #ef4444)
.form-control           - 表单控件 (width: 100%; padding: 12px 16px; border-radius: 6px)
.form-control:focus     - 聚焦状态 (border-color: #3b82f6; box-shadow: 0 0 0 3px rgba(59,130,246,0.1))
.form-control.error     - 错误状态 (border-color: #ef4444)
.error-message          - 错误提示 (color: #ef4444; font-size: 12px; margin-top: 4px)
.error-message.show     - 显示错误 (display: block)

单选按钮类:
.radio-group            - 单选组容器 (display: flex; gap: 16px; flex-wrap: wrap)
.radio-item             - 单选项 (display: flex; align-items: center; gap: 8px)
.radio-item input       - 单选按钮 (width: 16px; height: 16px; accent-color: #3b82f6)
.radio-item label       - 单选标签 (cursor: pointer; font-size: 14px)

价位带类:
.price-range            - 价位容器 (display: flex; align-items: center; gap: 8px)
.price-separator        - 分隔符 (color: #9ca3af; font-weight: 500)

标签输入类:
.tag-input-container    - 标签容器 (border: 1px solid #e5e7eb; border-radius: 6px; padding: 8px; min-height: 42px)
.tag-input-container:focus-within - 聚焦容器 (border-color: #3b82f6; box-shadow: 0 0 0 3px rgba(59,130,246,0.1))
.tag-item               - 标签项 (background: #eff6ff; color: #1e40af; padding: 4px 8px; border-radius: 4px)
.tag-item.review-tag    - 复盘标签 (background: #ecfdf5; color: #065f46)
.tag-remove             - 删除按钮 (background: none; border: none; cursor: pointer; font-size: 14px)
.tag-input              - 标签输入框 (border: none; outline: none; flex: 1; min-width: 100px)
.linked-tags            - 关联标签区 (margin-top: 8px; padding-top: 8px; border-top: 1px solid #f3f4f6)
.linked-tags-title      - 关联标题 (font-size: 12px; color: #9ca3af; margin-bottom: 4px)

提交区域类:
.submit-section         - 提交区域 (padding: 24px; border-top: 1px solid #e5e7eb; text-align: right)

看板模块类:
.kanban-section         - 看板容器 (background: #ffffff; border-radius: 12px; box-shadow: 0 2px 8px rgba(0,0,0,0.08))
.kanban-board           - 看板网格 (display: grid; grid-template-columns: repeat(5, 1fr); gap: 1px)
.kanban-column          - 看板列 (background: #ffffff; min-height: 500px; display: flex; flex-direction: column)
.kanban-column-header   - 列标题 (padding: 16px; background: #f1f5f9; text-align: center; font-weight: 600)
.kanban-column-content  - 列内容 (flex: 1; padding: 16px; display: flex; flex-direction: column; gap: 16px)
.kanban-card            - 看板卡片 (background: #ffffff; border: 1px solid #e5e7eb; border-radius: 8px; cursor: grab)
.kanban-card:hover      - 卡片悬停 (box-shadow: 0 4px 16px rgba(0,0,0,0.12); transform: translateY(-2px))
.kanban-card.dragging   - 拖拽状态 (opacity: 0.8; transform: rotate(2deg); cursor: grabbing)
.kanban-card-header     - 卡片头部 (padding: 12px; border-bottom: 1px solid #f3f4f6)
.kanban-card-body       - 卡片主体 (padding: 12px)
.demand-id              - 需求ID (font-size: 12px; font-weight: 500; color: #9ca3af)
.demand-title           - 需求标题 (font-size: 14px; font-weight: 500; color: #111827)
.demand-info            - 需求信息 (font-size: 12px; color: #4b5563; margin-bottom: 4px)
.last-updated           - 更新时间 (font-size: 11px; color: #9ca3af; text-align: right)
.thumbnail              - 缩略图 (width: 40px; height: 40px; border-radius: 4px; display: flex; align-items: center)

状态标签类:
.tag-red                - 红色标签 (background: #fef2f2; color: #991b1b)
.tag-orange             - 橙色标签 (background: #fef3c7; color: #92400e)
.tag-blue               - 蓝色标签 (background: #eff6ff; color: #1e40af)
.tag-green              - 绿色标签 (background: #ecfdf5; color: #065f46)
.tag-gray               - 灰色标签 (background: #f1f5f9; color: #4b5563)

拖拽状态类:
.drag-over              - 拖拽目标 (background: rgba(59,130,246,0.1))
.kanban-column.drag-over - 列拖拽状态 (background: #e5f3ff)

通用工具类:
.flex                   - 弹性容器 (display: flex)
.gap-md                 - 中等间距 (gap: 12px)
.btn                    - 按钮基类 (padding: 10px 16px; border-radius: 6px; cursor: pointer)
.btn-primary            - 主按钮 (background: #3b82f6; color: white)
.btn-secondary          - 次按钮 (background: #ffffff; color: #4b5563; border: 1px solid #e5e7eb)
.empty-placeholder      - 空状态占位 (text-align: center; color: #9ca3af; padding: 24px; font-style: italic)

通知类:
.toast                  - 通知容器 (position: fixed; top: 20px; right: 20px; padding: 12px 20px)
.toast.show             - 显示通知 (transform: translateX(0))
.toast.success          - 成功通知 (background: #10b981)
.toast.error            - 错误通知 (background: #ef4444)
.toast.warning          - 警告通知 (background: #f59e0b)

JavaScript函数清单
-----------------
核心交互函数:
- toggleExpand(textId, button)      - 复盘文本展开/折叠
- initTagInput()                    - 初始化标签输入功能
- createTagElement(tagText, isReviewTag, removable) - 创建标签元素
- validateField(e)                  - 字段实时校验
- validateForm()                    - 表单整体校验
- submitDemand()                    - 提交需求处理
- renderKanban()                    - 渲染看板
- createKanbanCard(demand)          - 创建看板卡片
- initDragAndDrop()                 - 初始化拖拽功能
- handleDragStart/End/Over/Drop     - 拖拽事件处理
- showToast(message, type)          - 显示通知
- exportData()                      - 数据导出功能

全局变量:
- demandData: Array                 - 需求数据数组
- currentTags: Array                - 当前输入标签
- linkedReviewTags: Array           - 关联复盘标签
- draggedCard: Element              - 当前拖拽卡片

技术规格总结
-----------
页面类型: 单页面应用 (SPA)
前端技术: HTML5 + CSS3 + Vanilla JavaScript
样式系统: CSS变量 + BEM命名规范
响应式: CSS Grid + Flexbox + 媒体查询
交互特效: CSS动画 + Transform + Transition
数据存储: 浏览器内存 (可扩展为LocalStorage/API)
兼容性: 现代浏览器 (Chrome 80+, Firefox 75+, Safari 13+)








页面设计规范文档 - chimer-demand-board.html
===============================================

整体页面架构
-----------
页面文件: chimer-demand-board.html
页面标题: CHIMER需求协同看板 - AICG服装设计系统
页面容器: 最大宽度1440px，居中布局，最小高度100vh
背景色: #fafafc
字体系统: -apple-system, BlinkMacSystemFont, "Segoe UI", Roboto, sans-serif

页面布局结构 - 滚动分离设计
---------------------------
1. 固定导航栏 + 独立滚动内容区结构
   - 左侧导航栏：固定定位，不随页面滚动
   - 主内容区：独立滚动区域，与导航栏完全分离

2. 左侧导航栏 (.sidebar)
   - 位置: 固定定位 (position: fixed)
   - 背景色: #ffffff
   - 高度: 100vh
   - 宽度: 80px（固定）
   - 包含Logo + 6个导航菜单项
   - z-index: 200（保证在所有内容之上）

3. 主内容区 (.main-content) - 配合固定头部
   - 左边距: 80px (为固定导航栏预留空间)
   - 顶部内边距: 73px (为固定头部预留空间)
   - 最小高度: 100vh
   - 背景色: #f5f7fa
   - 布局: flex垂直方向
   - 滚动: 页面整体滚动 (移除独立滚动容器)
   - 布局配合: 与固定头部和导航栏完美配合

4. 内容区域 (.content-area)
   - 双栏布局: 左栏(复盘区) + 右栏(看板区)
   - 网格比例: 1fr 2fr
   - 间距: 24px

左侧导航栏设计 (.sidebar) - 固定不滚动
-----------------------------------
整体容器:
- 位置: 固定定位 (position: fixed)
- 顶部: 0 (top: 0)
- 左侧: 0 (left: 0)
- 宽度: 80px
- 高度: 100vh
- 背景色: #ffffff
- 右边框: 1px solid #e8eaed
- z-index: 200
- 滚动: 垂直自动 (overflow-y: auto)
- 独立滚动: 与主内容区滚动完全分离

导航菜单项 (.nav-item):
- 内边距: 16px 12px
- 文本居中对齐
- 悬停效果: 背景变为 #303134
- 激活状态: 背景 #1a73e8，文本白色

菜单项列表:
1. 快速生成 - 图标: ⚡ - 状态: 普通
2. 实验室 - 图标: 🧪 - 状态: 普通
3. 企划版 - 图标: 📋 - 状态: 普通
4. 我的收藏 - 图标: ⭐ - 状态: 普通
5. 素材库 - 图标: 🎨 - 状态: 普通
6. 协同板 - 图标: 👥 - 状态: 激活(active)

图标样式:
- 字体大小: 20px
- 颜色: #9aa0a6 (普通状态)
- 颜色: #ffffff (激活状态)

文本样式:
- 字体大小: 12px
- 字重: 500
- 颜色: #9aa0a6 (普通状态)
- 颜色: #ffffff (激活状态)
- 上边距: 6px

页面头部设计 (.header) - 整栏固定吸顶
------------------------------------
整体容器:
- 位置: 固定定位 (position: fixed)
- 顶部: 0 (top: 0)
- 左侧: 80px (left: 80px，从导航栏右侧开始)
- 右侧: 0 (right: 0，延伸到页面右边缘)
- 高度: 73px (height: 73px)
- z-index: 150 (在导航栏之下，在内容之上)
- 内边距: 16px 24px
- 背景色: #ffffff
- 底部边框: 1px solid #e8eaed
- 阴影: 0 2px 4px rgba(0,0,0,0.08)
- 布局: flex，两端对齐
- 盒模型: border-box
- 整栏效果: 跨越整个视口宽度（除导航栏外）

主标题 (.page-title):
- 字体大小: 18px
- 字重: 500
- 颜色: #202124
- 内容: "需求协同看板"

状态提示 (.status-tip):
- 背景色: #fef7f0
- 颜色: #e37400
- 内边距: 4px 8px
- 圆角: 4px
- 字体大小: 12px
- 边框: 1px solid #fdd8b5
- 内容: "拖拽卡片可变更状态"

复盘区域设计 (.review-section)
----------------------------
整体容器:
- 背景色: #ffffff
- 圆角: 12px
- 边框: 1px solid #e8eaed
- 阴影: 0 2px 8px rgba(60,64,67,0.15)
- 内边距: 0

区域头部 (.section-header):
- 内边距: 20px 24px
- 底部边框: 1px solid #e8eaed
- 布局: flex，两端对齐
- 背景色: #ffffff

标题样式 (.section-title):
- 字体大小: 18px
- 字重: 500
- 颜色: #202124
- 内容: "上轮交付复盘 (ID: XXXXXXXXX)"
- 复盘ID显示: 实时显示最新复盘记录的ID

复盘ID标识 (.review-id):
- 字体大小: 14px
- 颜色: #5f6368
- 字重: 正常
- 左边距: 8px
- 格式: "(ID: XXXXXXXXX)"
- 数据来源: 最新"已复盘"状态卡片的复盘ID

应用按钮 (.apply-btn):
- 背景色: #1a73e8
- 颜色: #ffffff
- 内边距: 6px 12px
- 圆角: 4px
- 字体大小: 12px
- 字重: 正常
- 悬停效果: 背景变为 #1557b0

复盘内容区 (.review-content):
- 布局: grid网格，3列等宽
- 列间距: 1px
- 背景色: #e8eaed (作为分隔线)

复盘列 (.review-column):
- 背景色: #ffffff
- 内边距: 24px
- 最小高度: 240px

列标题设计:
1. 设计亮点 (.highlights .column-title):
   - 底部边框: 3px solid #34a853 (绿色)
   - 字体大小: 16px
   - 字重: 500
   - 颜色: #202124

2. 市场数据 (.metrics .column-title):
   - 底部边框: 3px solid #1a73e8 (蓝色)
   - 字体大小: 16px
   - 字重: 500
   - 颜色: #202124

3. 问题改进 (.improvements .column-title):
   - 底部边框: 3px solid #fbbc04 (橙色)
   - 字体大小: 16px
   - 字重: 500
   - 颜色: #202124

文本内容 (.review-text):
- 字体大小: 13px
- 行高: 1.6
- 颜色: #5f6368
- 文本对齐: 两端对齐

折叠状态 (.review-text.collapsed):
- 显示: -webkit-box
- 行数限制: 4行 (-webkit-line-clamp: 4)
- 方向: 垂直 (-webkit-box-orient: vertical)
- 溢出: 隐藏

展开按钮 (.expand-btn):
- 字体大小: 12px
- 颜色: #1a73e8
- 背景: 无
- 边框: 无
- 下划线: 1px
- 上边距: 8px
- 光标: 指针
- 悬停效果: 颜色变为 #1557b0
- 功能: 点击切换"展开"/"收起"文案

新增需求按钮设计 (.new-demand-btn)
-------------------------------
整体样式:
- 背景色: #1a73e8
- 颜色: #ffffff
- 内边距: 16px 24px
- 圆角: 8px
- 字体大小: 16px
- 字重: 500
- 宽度: 100%
- 上边距: 24px
- 阴影: 0 2px 4px rgba(26,115,232,0.2)

悬停效果:
- 背景色: #1557b0
- 阴影: 0 4px 8px rgba(26,115,232,0.3)
- 向上偏移: -1px

图标样式:
- 字体大小: 18px
- 右边距: 8px
- 内容: "+"

协同看板设计 (.kanban-section)
----------------------------
整体容器:
- 背景色: #ffffff
- 圆角: 12px
- 边框: 1px solid #e8eaed
- 阴影: 0 2px 8px rgba(60,64,67,0.15)

看板头部 (.section-header):
- 内边距: 20px 24px
- 底部边框: 1px solid #e8eaed
- 布局: flex，两端对齐

标题样式 (.section-title):
- 字体大小: 18px
- 字重: 500
- 颜色: #202124
- 内容: "协同看板"

看板网格 (.kanban-board):
- 布局: grid，5列等宽
- 列间距: 1px
- 背景色: #e8eaed (分隔线)
- 内边距: 24px

看板列 (.kanban-column):
- 背景色: #ffffff
- 最小高度: 500px
- 圆角: 8px

列标题 (.column-header):
- 内边距: 16px
- 背景色: #f8f9fa
- 文本居中
- 字重: 500
- 字体大小: 14px
- 圆角: 8px 8px 0 0

列标题列表（调整后顺序）:
1. 待确认 (2) - 背景: #fce8e6, 颜色: #d93025
2. 设计中 (3) - 背景: #fef7e0, 颜色: #f9ab00
3. 已交付 (1) - 背景: #e6f4ea, 颜色: #137333 (绿色)
4. 预售测试 (1) - 背景: #e8f0fe, 颜色: #1a73e8
5. 已复盘 (1) - 背景: #e6f4ea, 颜色: #137333

卡片状态标签颜色:
1. .status-pending - 背景: #ea4335 (红色)
2. .status-designing - 背景: #fbbc04 (黄色)
3. .status-delivered - 背景: #34a853 (绿色)
4. .status-testing - 背景: #4285f4 (蓝色)
5. .status-reviewed - 背景: #9aa0a6 (灰色)

列内容区 (.column-content):
- 内边距: 16px
- 最小高度: 400px
- 弹性布局，垂直方向
- 间距: 12px

看板卡片设计 (.kanban-card):
- 背景色: #ffffff
- 边框: 1px solid #e8eaed
- 圆角: 8px
- 内边距: 16px
- 阴影: 0 1px 3px rgba(60,64,67,0.08)
- 光标: grab
- 可拖拽: true (仅支持横向拖拽)
- 排序规则: 每列按更新时间从上到下（晚到早）

卡片字段结构:
待确认列卡片包含:
1. 状态标签 (.card-status)
2. 目标人群字段 (.card-field)
3. 品类字段 (.card-field)
4. 价位带字段 (.card-field)
5. 关联复盘ID字段 (.card-review-id, 条件显示)
6. 更新时间 (.card-update-time)
7. 操作按钮组 (.card-action-buttons)
   - 编辑按钮 (.card-edit-btn)
   - 删除按钮 (.card-delete-btn)

设计中列卡片包含:
1. 状态标签 (.card-status)
2. 设计稿缩略图 (.card-image)
3. 更新时间 (.card-update-time)
4. 上传设计稿按钮 (.card-upload-btn)

预售测试列卡片包含:
1. 状态标签 (.card-status)
2. 设计稿缩略图 (.card-image)
3. 更新时间 (.card-update-time)
4. 上传复盘数据按钮 (.card-upload-btn)

已复盘列卡片包含:
1. 状态标签 (.card-status)
2. 设计稿缩略图 (.card-image) - 恢复显示
3. 设计亮点字段 (.card-field)
4. 市场数据字段 (.card-field)
5. 问题改进字段 (.card-field)
6. 复盘ID字段 (.card-review-id)
7. 更新时间 (.card-update-time)
8. 修改复盘数据按钮 (.card-modify-btn)

卡片字段样式 (.card-field):
- 上下边距: 4px 0
- 字体大小: 12px
- 行高: 1.4
- 布局: flex，垂直对齐

字段标签 (.field-label):
- 颜色: #5f6368
- 字重: 500
- 最小宽度: 50px
- 右边距: 4px
- 显示: 不收缩 (flex-shrink: 0)

字段值 (.field-value):
- 颜色: #202124
- 文字换行: break-word
- 弹性: 1
- 文本溢出: 省略号显示
- 单行显示: 不换行 (white-space: nowrap)
- 溢出隐藏: overflow: hidden

待确认列字段值特殊样式:
- 单行显示，超出省略
- 缩短标题与内容间距

已复盘列字段值特殊样式:
- 单行显示，超出省略
- 配合设计稿缩略图显示

卡片操作按钮样式:

操作按钮组 (.card-action-buttons):
- 布局: flex水平排列
- 间距: 12px
- 上边距: 8px
- 对齐: 左对齐

通用操作按钮 (.card-action-btn):
- 背景: 无
- 边框: 无
- 颜色: #1a73e8 (蓝色)
- 字体大小: 12px
- 光标: pointer
- 内边距: 4px 8px
- 边框半径: 4px
- 过渡: all 0.2s ease
- 字重: 500
- 悬停效果: 背景 #f1f3ff, 颜色 #1557b0

删除按钮 (.card-delete-btn):
- 背景: 无
- 边框: 无
- 颜色: #ea4335 (红色)
- 字体大小: 11px
- 内边距: 4px 0
- 上边距: 8px
- 文本装饰: 下划线
- 宽度: 100%
- 文本对齐: 居中
- 悬停颜色: #d33b2c
- 悬停背景: #fef7f0

按钮功能说明:
- 编辑按钮 (.card-edit-btn): 待确认列卡片编辑功能
- 上传设计稿按钮 (.card-upload-btn): 设计中列上传设计稿
- 上传复盘数据按钮 (.card-upload-btn): 预售测试列上传复盘数据
- 修改复盘数据按钮 (.card-modify-btn): 已复盘列修改复盘数据

卡片布局对齐调整:

卡片整体样式调整:
- 内边距: 20px 12px 12px 12px (增加顶部间距)
- 状态标签居中对齐: left: 50%, transform: translateX(-50%)

所有状态列居中对齐元素:
- 状态标签 (.card-status): 居中对齐
- 关联复盘ID (.card-review-id): text-align: center
- 更新时间 (.card-update-time): text-align: center
- 复盘ID (.card-review-id): text-align: center
- 操作按钮 (.card-action-buttons): justify-content: center

待确认列特殊布局:
- 操作按钮组: display: grid, grid-template-columns: 1fr 1fr
- 编辑和删除按钮: 2列等宽布局, width: 100%, text-align: center
- 按钮间距: gap: 8px

单独操作按钮样式:
- 上传设计稿、上传复盘数据、修改复盘数据按钮
- display: block, width: 100%, text-align: center
- margin-top: 8px

角色与权限管理功能
==================

角色选择器设计 (.role-selector):
- 位置: 页面头部右侧区域，位于"新增需求"按钮右侧
- 布局: flex水平排列，header-right容器内与新增需求按钮并列显示
- 背景: #f8f9fa
- 边框: 1px solid #dadce0
- 圆角: 6px
- 内边距: 8px 12px
- 间距: 8px

角色选择框 (.role-select):
- 背景: #ffffff
- 边框: 1px solid #dadce0
- 圆角: 4px
- 内边距: 6px 12px
- 字体大小: 14px
- 最小宽度: 80px
- 焦点样式: 蓝色边框 + 阴影

角色权限规则:

客户角色 (client):
权限:
- 可见且可操作: "新增需求"按钮
- 可见且可操作: "应用至新需求参考"按钮
- 可编辑: "待确认"状态的需求卡片
- 可删除: "待确认"状态的需求卡片

限制:
- 不可拖拽: 任何状态的卡片
- 不可操作: 上传设计稿、上传复盘数据、修改复盘数据

设计师角色 (designer):
权限:
- 可拖拽: 除"预售测试"和"已复盘"外的所有卡片
- 可操作: "上传设计稿"按钮（仅设计中列）

限制:
- 不可见: "新增需求"按钮
- 不可见: "应用至新需求参考"按钮
- 不可编辑/删除: "待确认"状态的需求
- 不可拖拽: "预售测试"和"已复盘"状态的卡片
- 不可操作: 上传复盘数据、修改复盘数据

运营角色 (operator):
权限:
- 可拖拽: 所有状态的卡片
- 可操作: "上传复盘数据"按钮（仅预售测试列）
- 可操作: "修改复盘数据"按钮（仅已复盘列）

限制:
- 不可见: "新增需求"按钮
- 不可见: "应用至新需求参考"按钮
- 不可编辑/删除: "待确认"状态的需求

权限检查机制:
1. 界面显示控制: 根据角色显示/隐藏相应元素
2. 操作权限验证: 在操作执行前进行权限检查
3. 拖拽权限控制: 动态设置卡片的draggable属性
4. 错误提示: 无权限操作时显示友好的错误消息

角色切换机制优化:
- 初始化流程: 移除setTimeout延迟，直接在DOMContentLoaded后初始化角色管理
- 角色同步机制: 双向同步currentRole变量与roleSelect选择器的值
- 元素选择器重构: 统一选择所有.card-upload-btn，然后通过onclick内容过滤区分类型
- 权限应用逻辑: 先隐藏所有相关元素，再根据角色显示对应元素，避免状态冲突
- 事件监听器管理: 移除旧监听器后再添加新的，避免重复绑定
- 调试和验证系统: 
  * 详细的控制台日志记录每个角色切换步骤
  * verifyRoleSwitch函数验证元素显示状态
  * testRolePermissions全局函数支持手动测试
  * 实时显示元素的计算样式状态
- 错误处理: 增强的null检查和错误日志
- 元素控制优化: 使用visibility和display双重控制确保元素状态一致
- JavaScript错误修复: 移除未定义的initImageUpload()函数调用和未使用的uploadedImages变量，确保页面初始化不被中断

布局结构调整:
- 页面头部结构重构: 从header-center改为header-right布局
- 角色选择器位置调整: 从头部中央移动到"新增需求"按钮右侧
- 响应式布局优化: 移动端保持垂直居中，确保用户体验一致
- CSS样式更新: header-right使用flex布局，gap间距16px，margin-left: auto右对齐

卡片状态变更权限管理:
- 拖拽完成后权限重新应用: 在handleDrop函数中添加applyRolePermissions调用
- 动态操作按钮显示: 卡片移动到新状态后，立即显示对应角色的操作按钮
- 状态变更日志记录: 详细记录权限应用过程，便于调试和验证
- 测试函数支持: testCardStateChange函数用于验证状态变更后的权限应用
- 实际应用场景: 
  * 待确认→设计中: 设计师角色显示"上传设计稿"按钮
  * 设计中→预售测试: 运营角色显示"上传复盘数据"按钮  
  * 预售测试→已复盘: 运营角色显示"修改复盘数据"按钮

动态操作按钮更新机制:
- updateCardActionButtons函数: 根据卡片状态动态生成对应的操作按钮HTML
- 状态按钮映射规则:
  * pending: 编辑、删除按钮（2列等宽布局）
  * designing: 上传设计稿按钮
  * delivered: 修改设计稿按钮（仅设计师角色可见）
  * testing: 上传复盘数据按钮
  * reviewed: 修改复盘数据按钮
- 按钮清理机制: 移除现有操作按钮，避免重复和冲突
- 按钮插入位置: 在卡片更新时间元素之后插入新按钮
- 按钮识别优化: 使用按钮文本内容而非onclick属性进行类型过滤
- 测试支持: testDragStateChange函数用于验证状态变更后按钮更新

已交付列修改设计稿功能:
- 功能描述: 在已交付状态的卡片中添加"修改设计稿"文本按钮
- 权限控制: 仅设计师角色可见和可操作
- 按钮样式: .card-modify-design-btn，蓝色文本，悬停时浅蓝背景
- 交互处理: modifyDesign(cardId)函数处理点击事件
- 权限验证: checkButtonPermission('modifyDesign', 'delivered')验证操作权限
- 角色集成: 在toggleElementsByRole函数中为设计师角色显示此按钮

新增需求弹框UI优化:
- 示例文本位置调整: 将"示例：女性，25-35岁，一线城市白领"移动到必填项星号(*)右侧
- HTML结构变更: 将required类改为显式的HTML星号，使用<span class="required-star">*</span>
- 样式实现: 
  * .form-example-inline类：12px字体，灰色文本，斜体样式，左边距8px
  * .required-star类：红色星号样式，与原CSS伪元素效果一致
- 视觉效果: 示例文本紧跟必填星号，形成"目标人群 * 示例：..."的逻辑顺序
- 用户体验: 示例文本位置更加精确，在必填标识之后立即提供填写指导

系统通知优化:
- 位置调整: 将操作成功提示从页面右侧调整为页面居中上方
- 定位方式: 使用fixed定位，top: 20px, left: 50%, transform: translateX(-50%)实现水平居中
- 动画效果: 将slideInRight/slideOutRight动画改为slideInTop/slideOutTop，从上方滑入和滑出
- 代码优化: 移除重复的showNotification函数定义，保留支持类型参数的完整版本
- 视觉体验: 通知位置更符合用户视觉焦点，避免与页面右侧内容冲突

参考复盘ID优化:
- 文案调整: 将所有"关联复盘ID"统一改为"参考复盘ID"，包括字段标签、注释和弹框标题
- 已复盘状态显示: 为所有已复盘状态卡片添加隐藏的"参考复盘ID"字段，默认不显示
- 状态变更保持: 在updateCardStatus函数中添加特殊逻辑，当卡片状态变为"已复盘"时，检查是否有参考复盘ID值
- 动态显示: 如果卡片有参考复盘ID值，变为已复盘状态后自动显示参考复盘ID字段
- 字段结构: 已复盘卡片包含两个ID字段：参考复盘ID（来源于应用按钮创建的需求）和复盘ID（本次复盘生成的ID）
- 测试功能: 添加testReferenceReviewId函数，用于验证参考复盘ID在状态变更后的显示逻辑

参考复盘ID显示修复:
- 问题修复: 解决有参考复盘ID的卡片拖拽到已复盘后参考复盘ID消失的问题
- 全状态显示: 确保有参考复盘ID的卡片在所有状态列中都保持显示，不仅限于已复盘状态
- 逻辑优化: 修改updateCardStatus函数，在所有状态变更时都检查并显示有值的参考复盘ID
- 选择器改进: 使用更精确的选择器，通过field-label文本内容判断参考复盘ID字段
- 初始化显示: 添加initReferenceReviewIdDisplay函数，确保页面加载时所有有参考复盘ID值的卡片都正确显示
- 现有卡片修复: 将第一个已复盘卡片的参考复盘ID从隐藏状态改为显示状态
- 测试功能升级: 扩展testReferenceReviewId函数，测试完整的状态变更流程和现有卡片显示情况

参考复盘ID已复盘状态修复:
- 核心问题: generateReviewIdForCard函数在生成复盘ID时错误移除了参考复盘ID元素
- 根因分析: 原代码使用querySelector('.card-review-id')选择第一个匹配元素进行移除，但参考复盘ID和复盘ID都使用相同的CSS类
- 修复方案: 改用querySelectorAll('.card-review-id')遍历所有元素，通过field-label文本内容精确判断要移除的元素
- 选择器逻辑: 只移除label.textContent.includes('复盘ID:') && !label.textContent.includes('参考复盘ID')的元素
- HTML结构优化: generateReviewIdForCard生成的复盘ID使用标准的field-label和field-value结构，与参考复盘ID保持一致
- 双ID共存: 修复后已复盘状态卡片可以同时显示参考复盘ID（来源信息）和复盘ID（本次生成）
- 专项测试: 新增testReviewedStatusReferenceId函数，专门测试拖拽到已复盘状态时的参考复盘ID保持效果
- 演示功能增强: 优化demoReferenceReviewIdFix函数，增加已复盘状态下双ID检查和详细结果分析

新增需求弹框参考复盘ID交互功能:
- 功能需求: 在通过"应用为新需求参考"打开的弹框中，为"已关联参考复盘ID"区域添加取消和重新关联功能
- HTML结构调整: 将原单一显示区域分为两个状态：linkedState（正常关联状态）和cancelledState（取消关联状态）
- 正常关联状态: 显示"已关联参考复盘ID：{ID}"和红色"取消参考"按钮，使用flex布局平铺
- 取消关联状态: 显示"已取消关联参考复盘ID"文案和蓝色"重新关联"按钮，使用flex布局平铺
- 交互逻辑: cancelReference(event)函数保存当前ID并切换到取消状态，restoreReference(event)函数恢复ID并切换回正常状态
- 事件处理: 两个按钮点击时都调用event.stopPropagation()和event.preventDefault()阻止事件冒泡，防止意外触发弹框关闭
- 数据保持: 使用savedReferenceId全局变量保存被取消的参考复盘ID，确保重新关联时能恢复正确的ID值
- 状态管理: applyReviewData()函数初始化时显示正常关联状态，resetDemandForm()函数重置时清空所有状态和数据
- 视觉设计: 取消按钮使用红色主题(#ea4335)，重新关联按钮使用蓝色主题(#1a73e8)，都带有hover效果
- 用户体验: 点击取消参考或重新关联按钮后，用户继续留在新增需求弹框内，不会意外关闭弹框
- 用户反馈: 操作成功后显示页面顶部通知，确认用户操作结果
- 测试功能: 新增testReferenceToggle函数和testCancelReferenceNoClose函数，验证完整的交互流程和弹框保持效果

已交付状态样式 (.status-delivered):
- 背景色: #e6f4ea
- 颜色: #137333
- 边框: 1px solid #ceead6

拖拽交互规则:
- 仅支持跨列移动（横向拖拽）
- 不支持列内重新排序（纵向拖拽）
- 同列内拖拽显示错误提示: "不支持在同列内移动卡片"
- 跨列拖拽弹框确认: "确定要将卡片从'[原状态]'移动到'[目标状态]'吗？"
- 用户取消拖拽: 卡片保持原位置不移动
- 确认拖拽: 执行状态更新、时间戳更新、重新排序等操作

关联复盘ID规则:
- 显示条件: 通过"应用至新需求参考"创建的卡片
- 数据来源: 最新已复盘卡片的复盘ID
- 显示格式: "关联复盘ID: XXXXXXXXX"
- 显示位置: 价位带字段下方
- 标签颜色: 深色字体 (#202124)
- 标签字重: 600

复盘ID显示样式 (.card-review-id):
- 字体大小: 10px
- 颜色: #202124 (深色)
- 文本对齐: 左对齐
- 字重: 500
- 上边距: 3px

复盘ID标签 (.card-review-id .field-label):
- 颜色: #202124 (深色)
- 字重: 600
- 旋转: 2deg
- 光标: grabbing

卡片状态标签 (.card-status):
- 内边距: 4px 8px
- 圆角: 4px
- 字体大小: 12px
- 字重: 500
- 下边距: 12px

状态标签颜色:
1. .status-pending - 背景: #fce8e6, 颜色: #d93025
2. .status-designing - 背景: #fef7e0, 颜色: #f9ab00
3. .status-testing - 背景: #e8f0fe, 颜色: #1a73e8
4. .status-delivering - 背景: #e8f0fe, 颜色: #1a73e8
5. .status-reviewed - 背景: #e6f4ea, 颜色: #137333

卡片图标 (.card-image):
- 字体大小: 24px
- 文本居中
- 下边距: 8px

更新时间 (.card-update-time):
- 字体大小: 12px
- 颜色: #9aa0a6
- 文本居右对齐

空状态占位 (.empty-placeholder):
- 颜色: #9aa0a6
- 文本居中
- 内边距: 40px 20px
- 字体样式: 斜体
- 字体大小: 14px

新增需求抽屉弹框设计
------------------
遮罩层 (.drawer-overlay):
- 位置: 固定定位，全屏覆盖
- 背景色: rgba(0, 0, 0, 0.5)
- z-index: 1000
- 初始状态: 透明度0，不可见
- 激活状态: 透明度1，可见
- 过渡时间: 0.3s

抽屉容器 (.demand-drawer):
- 位置: 固定定位，右侧
- 宽度: 480px
- 高度: 100vh
- 背景色: #ffffff
- 圆角: 12px 0 0 12px
- 阴影: -4px 0 20px rgba(0, 0, 0, 0.15)
- z-index: 1001
- 初始状态: 向右偏移100%
- 激活状态: 无偏移
- 过渡时间: 0.3s
- 布局: flex垂直方向

抽屉头部 (.drawer-header):
- 内边距: 20px 24px
- 底部边框: 1px solid #e8eaed
- 布局: flex，两端对齐
- 背景色: #ffffff

抽屉标题 (.drawer-title):
- 字体大小: 18px
- 字重: 500
- 颜色: #202124
- 内容: "新增需求"

关闭按钮 (.drawer-close):
- 背景: 无
- 边框: 无
- 字体大小: 24px
- 颜色: #5f6368
- 内边距: 4px
- 圆角: 4px
- 悬停效果: 背景 #f8f9fa

抽屉主体 (.drawer-body):
- 弹性: 1 (占满剩余空间)
- 内边距: 24px
- 滚动: 垂直自动

表单字段设计
-----------
表单组 (.form-group):
- 下边距: 24px

字段标签 (.form-label):
- 显示: 块级
- 字体大小: 14px
- 字重: 500
- 颜色: #202124
- 下边距: 8px

必填标签 (.form-label.required):
- 伪元素添加: " *"
- 星号颜色: #ea4335

表单控件 (.form-control):
- 宽度: 100%
- 内边距: 12px 16px
- 边框: 1px solid #dadce0
- 圆角: 6px
- 字体大小: 14px
- 颜色: #202124
- 背景色: #ffffff
- 过渡时间: 0.2s

聚焦状态 (.form-control:focus):
- 边框颜色: #1a73e8
- 阴影: 0 0 0 3px rgba(26, 115, 232, 0.1)
- 轮廓: 无

错误状态 (.form-control.error):
- 边框颜色: #ea4335

错误信息 (.error-message):
- 颜色: #ea4335
- 字体大小: 12px
- 上边距: 4px
- 初始显示: 隐藏

显示错误 (.error-message.show):
- 显示: 块级

目标人群字段 (组合输入)
---------------------
目标人群组容器 (.target-audience-group):
- 布局: flex垂直方向
- 间距: 12px

选择框组合 (.target-audience-selects):
- 布局: flex水平方向
- 间距: 12px
- 子元素: 等宽分布 (flex: 1)

性别选择框 (#gender):
- 类型: 下拉选择框
- 选项: 选择性别(默认), 女性, 男性, 不限
- 样式: 继承 .form-control

年龄选择框 (#age_range):
- 类型: 下拉选择框
- 选项: 选择年龄(默认), 18-25岁, 25-35岁, 35-45岁, 45-55岁, 55岁以上
- 样式: 继承 .form-control

描述输入框 (.target-description):
- 类型: 文本域 (textarea)
- 最大长度: 100字符
- 行数: 2行
- 占位符: "请描述目标人群特征（如：一线城市白领、学生群体等），限100字"
- 样式: 可垂直调整大小 (resize: vertical)
- 最小高度: 50px

字符计数器 (.char-count):
- 位置: 右对齐
- 字体大小: 12px
- 颜色: #5f6368 (正常), #f9ab00 (60+字符), #ea4335 (80+字符)
- 上边距: 4px

示例文案 (.form-example):
- 字体大小: 12px
- 颜色: #5f6368
- 上边距: 6px
- 样式: 斜体
- 内容: "示例：女性，25-35岁，一线城市白领"

验证规则:
- 性别和年龄必选
- 描述可选，但限制100字符
- 错误提示: "请选择性别和年龄范围"

品类字段 (层级下拉选择)
---------------------
选择框 (select.form-control):
- 继承form-control样式
- 宽度: 100%
- 支持选项组 (optgroup)

层级选项结构:
默认选项: 请选择品类 (空字符串)

上装 (optgroup):
- T恤 (值: "上装:T恤")
- 西装 (值: "上装:西装") 
- 卫衣 (值: "上装:卫衣")
- 衬衫 (值: "上装:衬衫")
- 毛衣 (值: "上装:毛衣")
- 背心 (值: "上装:背心")

下装 (optgroup):
- 牛仔长裤 (值: "下装:牛仔长裤")
- 西裤 (值: "下装:西裤")
- 休闲长裤 (值: "下装:休闲长裤")
- 休闲短裤 (值: "下装:休闲短裤")
- 运动短裤 (值: "下装:运动短裤")
- 阔腿裤 (值: "下装:阔腿裤")

裙装 (optgroup):
- 连衣裙 (值: "裙装:连衣裙")
- 西装裙 (值: "裙装:西装裙")
- 半身裙 (值: "裙装:半身裙")
- 百褶裙 (值: "裙装:百褶裙")
- 背心裙 (值: "裙装:背心裙")

值格式: "大类:小类" (如: "上装:T恤")

价位带字段 (双输入框)
------------------
价格区间容器 (.price-range):
- 布局: flex水平对齐
- 间距: 12px

价格输入组 (.price-input-group):
- 弹性: 1
- 布局: flex水平对齐
- 间距: 8px

货币选择 (.currency-select):
- 宽度: 70px
- 内边距: 12px 8px
- 边框: 1px solid #dadce0
- 圆角: 6px
- 字体大小: 14px
- 背景色: #ffffff

货币选项:
1. ¥ (人民币)
2. $ (美元)
3. € (欧元)

价格输入 (.price-input):
- 弹性: 1
- 类型: number
- 最小值: 0

价格分隔符 (.price-separator):
- 颜色: #5f6368
- 字重: 500
- 字体大小: 16px
- 内容: "～"

灵感词字段 (标签输入)
------------------
标签容器 (.tag-input-container):
- 边框: 1px solid #dadce0
- 圆角: 6px
- 内边距: 8px
- 最小高度: 44px
- 布局: flex弹性换行
- 间距: 6px
- 对齐: 居中
- 光标: 文本
- 背景色: #ffffff
- 过渡时间: 0.2s

聚焦状态 (.tag-input-container:focus-within):
- 边框颜色: #1a73e8
- 阴影: 0 0 0 3px rgba(26, 115, 232, 0.1)

标签项 (.tag-item):
- 布局: flex对齐居中
- 背景色: #374455 (深蓝色)
- 颜色: white
- 内边距: 4px 8px
- 圆角: 4px
- 字体大小: 12px
- 间距: 4px

复盘标签 (.tag-item.review-tag):
- 背景色: #34a853 (绿色)
- 颜色: white

标签删除按钮 (.tag-remove):
- 背景: 无
- 边框: 无
- 颜色: 继承
- 光标: 指针
- 字体大小: 16px
- 行高: 1
- 内边距: 0
- 左边距: 4px
- 内容: "×"

标签输入框 (.tag-input):
- 边框: 无
- 轮廓: 无
- 弹性: 1
- 最小宽度: 120px
- 字体大小: 14px
- 内边距: 4px
- 背景: 透明
- 占位符: "输入灵感词后按Enter添加"

关联复盘ID区域 (.linked-review-id):
- 背景色: #f8f9fa
- 边框: 1px solid #e8eaed
- 圆角: 8px
- 内边距: 12px
- 上边距: 12px
- 显示条件: 仅在"应用至新需求参考"时显示

关联复盘ID标题 (.linked-review-id-title):
- 字体大小: 12px
- 颜色: #5f6368
- 下边距: 8px
- 字重: 500
- 内容: "已关联复盘ID："

关联复盘ID值 (.linked-review-id-value):
- 字体大小: 14px
- 颜色: #34a853 (绿色)
- 字重: 600
- 字体族: monospace (等宽字体)
- 数据来源: 最新"已复盘"状态卡片的复盘ID

抽屉底部 (.drawer-footer):
- 内边距: 20px 24px
- 上边框: 1px solid #e8eaed
- 背景色: #ffffff
- 布局: flex
- 间距: 12px
- 对齐: 右对齐

按钮基础样式 (.btn):
- 内边距: 10px 16px
- 圆角: 6px
- 字体大小: 14px
- 字重: 500
- 光标: 指针
- 过渡时间: 0.2s
- 边框: 1px solid

主按钮 (.btn-primary):
- 背景色: #1a73e8
- 颜色: white
- 边框颜色: #1a73e8

主按钮悬停:
- 背景色: #1557b0
- 边框颜色: #1557b0

次按钮 (.btn-secondary):
- 背景色: #ffffff
- 颜色: #5f6368
- 边框颜色: #dadce0

次按钮悬停:
- 背景色: #f8f9fa
- 边框颜色: #bdc1c6

响应式断点 - 滚动分离适配
--------------------------
1200px以下 (大平板):
- 复盘内容: 单列堆叠
- 看板网格: 3列布局

768px以下 (移动端):
- 导航栏宽度: 60px
- 主内容区左边距: 60px (适配窄导航栏)
- 主内容区顶部内边距: 93px (适配移动端头部高度)
- 页面头部: 固定定位left: 60px，垂直布局，高度93px
- 看板网格: 2列布局
- 抽屉弹框: 全屏显示

480px以下 (小屏手机):
- 看板网格: 单列布局

滚动行为规范:
- 导航栏: 固定不动，始终可见 (z-index: 200)
- 页面头部: 整栏固定吸顶，跨越视口宽度 (z-index: 150)
- 主内容区: 使用页面整体滚动，配合固定元素布局
- 抽屉弹框: 独立滚动，最高层级显示 (z-index: 1001)

交互效果规范
-----------
1. 按钮悬停: 颜色加深 + 向上1px偏移
2. 卡片悬停: 阴影增强 + 向上2px偏移
3. 拖拽效果: 透明度80% + 旋转2度
4. 输入聚焦: 边框高亮 + 外发光效果
5. 状态转换: 0.2s缓动动画
6. 抽屉动画: 滑入/滑出 0.3s
7. 通知动画: 右侧滑入/滑出

通知系统设计
-----------
通知容器:
- 位置: 固定定位，右上角
- 上边距: 20px
- 右边距: 20px
- 背景色: #1a73e8 (成功) / #ea4335 (错误)
- 颜色: white
- 内边距: 12px 20px
- 圆角: 6px
- 字体大小: 14px
- z-index: 2000
- 阴影: 0 4px 12px rgba(0,0,0,0.2)
- 动画: slideInRight 0.3s

显示时长: 3秒自动消失

JavaScript功能清单
-----------------
核心交互函数:
1. initDragAndDrop() - 初始化拖拽功能
2. initButtons() - 初始化按钮事件
3. initDrawer() - 初始化抽屉控制
4. initFormValidation() - 初始化表单验证
5. initTagInput() - 初始化标签输入
6. openDrawer() - 打开抽屉
7. closeDrawer() - 关闭抽屉
8. resetForm() - 重置表单
9. applyReviewData() - 应用复盘数据
10. createTagElement() - 创建标签元素
11. validateField() - 字段验证
12. validateForm() - 表单整体验证
13. clearFormErrors() - 清除错误状态
14. submitForm() - 提交表单
15. addNewDemandCard() - 添加新卡片
16. showNotification() - 显示通知
17. updateColumnCounts() - 更新列计数
18. handleDragStart/End/Over/Drop - 拖拽事件处理
19. toggleExpand(textId, button) - 展开/收起复盘文本
20. sortKanbanCards() - 按时间排序看板卡片
21. generateReviewId() - 生成复盘ID（年月日+3位随机数）
22. generateReviewIds() - 为所有已复盘卡片生成复盘ID
23. displayReviewId() - 在复盘区域显示复盘ID
24. generateReviewIdForCard(card) - 为单个卡片生成复盘ID
25. updateCardTimestamp(card) - 更新卡片时间戳
26. updateReviewAreaId(reviewId) - 更新复盘区域ID显示
27. initCharCounter() - 初始化字符计数器
28. deleteCard(cardId) - 删除指定ID的卡片
29. getCurrentReviewId() - 获取当前最新复盘ID
30. editCard(cardId) - 编辑待确认列卡片
31. uploadDesign(cardId) - 上传设计中列设计稿
32. uploadReviewData(cardId) - 上传预售测试列复盘数据
33. modifyReviewData(cardId) - 修改已复盘列复盘数据

角色权限管理功能:
34. initRoleManagement() - 初始化角色管理系统
35. handleRoleChange(event) - 处理角色切换事件
36. applyRolePermissions(role) - 应用角色权限设置
37. toggleElementsByRole(role) - 根据角色显示/隐藏元素
38. updateDragDropPermissions(role) - 更新拖拽权限
39. updateButtonPermissions(role) - 更新按钮权限
40. showElement(element) - 显示元素
41. hideElement(element) - 隐藏元素
42. getRoleDisplayName(role) - 获取角色显示名称
43. hasPermission(action) - 检查操作权限
44. checkDragPermission(fromStatus, toStatus) - 检查拖拽权限
45. checkButtonPermission(action, cardStatus) - 检查按钮操作权限

全局变量:
1. draggedCard - 当前拖拽卡片
2. currentTags - 当前输入标签数组
3. linkedReviewTags - 关联复盘标签数组
4. isFromApplyButton - 是否从应用按钮进入
5. currentRole - 当前用户角色 (client/designer/operator)

数据结构:
1. formData对象包含所有表单字段
2. 复盘标签数据数组
3. 看板卡片数据结构

技术实现总结
-----------
页面类型: 单页面应用 (SPA)
前端技术: HTML5 + CSS3 + Vanilla JavaScript
样式系统: 自定义CSS + 响应式设计
布局技术: 固定定位 + CSS Grid + Flexbox
滚动管理: 多层固定布局设计 (导航栏固定 + 头部整栏固定 + 内容区配合)
交互特效: CSS动画 + Transform + Transition
数据管理: 浏览器内存存储
兼容性: 现代浏览器 (Chrome 80+, Firefox 75+, Safari 13+)
无障碍: 语义化HTML + 键盘导航支持
性能优化: 固定导航栏减少重绘，内容区平滑滚动
